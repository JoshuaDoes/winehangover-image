#!/data/data/com.termux/files/usr/bin/bash

export MAINTAINER=JoshuaDoes
export VER="v1.11.1"

export WINEPREFIX="$HOME/.hangover"
export CACHE="$WINEPREFIX/.cache"
export WINEPATH="$WINEPREFIX/wine"
export WINEBIN="$WINEPATH/arm64-v8a/bin"
export WINELIB="$WINEPATH/arm64-v8a/lib/wine"
export WINELIBWIN="$WINELIB/aarch64-windows"
export TESTPATH="$WINEPREFIX/test"
export PATH="$WINEBIN:$PATH"

export VK_ICD_FILENAMES=$PREFIX/share/vulkan/icd.d/wrapper_icd.aarch64.json
export MESA_VK_WSI_PRESENT_MODE=mailbox
export DISPLAY=:0

export MNT="$WINEPREFIX/dosdevices"
export C="$WINEPREFIX/drive_c"
export T="$MNT/t:"
export Z="$MNT/z:"

export WINEARCH=win64
export WINEDEBUG=-all

export WINEDLLOVERRIDES="d3d8,d3d9,d3d10core,d3d11,dxgi=n,b"
if [ ! -f $C/windows/system32/d3d8.dll ]; then
  WINEDLLOVERRIDES="d3d9,d3d10,d3d10_1,d3d10core,d3d11,dxgi=n,b"
fi

export DXVK_HUD=version,fps,api,gpuload,devinfo,compiler,scale=0.65

# Hide outputs when unnecessary
pushd() {
  command pushd "$@" >/dev/null
}
popd() {
  command popd "$@" >/dev/null
}
wait() {
  command wait "$@" >/dev/null 2>&1
}
disown() {
  command disown "$@" >/dev/null 2>&1
}
mkdir() {
  command mkdir -p "$@" >/dev/null 2>&1
}
rm() {
  command rm "$@" >/dev/null 2>&1
}
mv() {
  command mv "$@" >/dev/null 2>&1
}
unzip() {
  command unzip -o "$@" >/dev/null 2>&1
}
pkg() {
  command pkg "$@" >/dev/null 2>&1
}
dpkg() {
  command dpkg "$@" >/dev/null 2>&1
}
wget() {
  command wget "$1" --timestamping --quiet --show-progress
}
wget2() {
  command wget "$1" -O "$2" --timestamping --quiet --show-progress
}
wine() {
  LD_LIBRARY_PATH="$TESTPATH" \
    command wine "$@"
}
wineboot() {
  LD_LIBRARY_PATH="$TESTPATH" \
    command wineboot "$@" >/dev/null 2>&1
}
wineserver() {
  LD_LIBRARY_PATH="$TESTPATH" \
    command wineserver "$@" >/dev/null 2>&1
}
winetricks() {
  LD_LIBRARY_PATH="$WINEPREFIX/test" \
    command $WINEBIN/winetricks "$@" #>/dev/null 2>&1
}
msiexec() {
  wine msiexec /i "$1" /quiet /qn /norestart
}
winedesktop() {
  wine explorer /desktop=shell,-1x-1 "$cmd" "${args[@]}" >/dev/null 2>&1
}
openbox-session() {
  command openbox-session >/dev/null 2>&1
}
xfce4-session() {
  command xfce4-session >/dev/null 2>&1
}

info() {
  echo "  Termux/Hangover Launcher"
  echo "  > $VER"
  echo ""
  echo "  Maintainer: $MAINTAINER"
  echo ""
  echo "Most recent changelog message:"
  pushd $CACHE
  if [ -d .git ]; then
    echo "  $(git log -1 --pretty=format:%B | cat)"
  elif [ -f LASTCOMMITMSG ]; then
    echo "  $(cat LASTCOMMITMSG)"
  fi
  popd
}

startx() {
  LD_PRELOAD_OLD=$LD_PRELOAD
  if [ $(getprop ro.config.knox) ]; then
    export LD_PRELOAD=/system/lib64/libskcodec.so
  fi
  taskset -c 0-2 pulseaudio \
    --start \
    --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" \
    --exit-idle-time=-1
  export LD_PRELOAD=$LD_PRELOAD_OLD

  echo ""
  echo "  > Starting an X server"
  termux-x11 -retro $DISPLAY >/dev/null 2>&1 &
  disown
  sleep 1

  echo "  > Starting the Termux-X11 app"
  am start --user 0 -n com.termux.x11/.MainActivity >/dev/null 2>&1
  sleep 1

  echo "  > Setting up the environment"
  export LD_LIBRARY_PATH="$TESTPATH"
  export PULSE_SERVER=127.0.0.1

  # Import Hangover registry on every boot
  wine regedit /s $WINEPREFIX/hangover.reg

  if [ ! -z $HANGOVERDBG ] && [ "$wrapper" = "wine" ] && [ "$cmd" = "cmd" ]; then
    echo "  > Booting the command prompt"
    echo ""
    pushd $C
    wine cmd <&0 &
    popd
    export CMDPID=$!
    wrapper=""
    cmd=""
    args=""
    sleep 1
  else
    echo "  > Booting $DE"
    if [ ! "$wrapper" = "" ]; then
      echo "  > Launch cmd: $wrapper $cmd"
    elif [ ! "$cmd" = "" ]; then
      echo "  > Launch cmd: $cmd"
    fi
  fi

  case $DE in
    openbox)
      openbox-session &
      export DEPID=$!
      ;;
    xfce4)
      xfce4-session &
      export DEPID=$!
      ;;
  esac

  pushd $C
  case $DE in
    "wine")
      winedesktop &
      export DEPID=$!
      sleep 1
      ;;
    *)
      sleep 1
      if [ ! -z $wrapper ]; then
        "$wrapper" "$cmd" "${args[@]}" &
        disown
      elif [ ! -z $cmd ]; then
        "$cmd" "${args[@]}" &
        disown
      fi
      ;;
  esac
  popd

  if [ ! -z $CMDPID ]; then
    wait $CMDPID
    disown $CMDPID
  else
    wait $DEPID
  fi
  disown $DEPID

  echo ""
  stopwine
  stopx
}
killconfirmed() {
  kill -9 $(jobs -p) 2>/dev/null
  pkill -9 -f "C:" 2>/dev/null
  pkill -9 -f "T:" 2>/dev/null
  pkill -9 -f "Z:" 2>/dev/null
  pkill -9 -f ".exe" 2>/dev/null
  pkill -9 -f "pulseaudio" 2>/dev/null
  pkill -9 -f "dbus-daemon" 2>/dev/null
  pkill -9 -f "dbus-launch" 2>/dev/null
  pkill -9 -f "com.termux.x11" 2>/dev/null
}
stopwine() {
  echo "  > Shutting down Wine prefix"
  wineboot --end-session
}
stopx() {
  echo "  > Stopping the X server"
  am broadcast -a com.termux.x11.ACTION_STOP -p com.termux.x11 >/dev/null 2>&1
}
stopall() {
  stopwine
  stopx
  killconfirmed
}

### main ###

clear
echo ""
if [ ! -z $HANGOVERDBG ]; then
  echo "  > RUNNING IN DEBUG MODE!"
  echo ""
fi
info
echo ""
stopall
echo ""

if [ -z "$DE" ]; then
  PS3='  Which desktop environment should we boot? (1-3) '
  menuvar=("Wine" "Openbox" "None" "Exit")
  select menuvar in "${menuvar[@]}"
  do
    case $menuvar in
      "None")
        break;;
      "Wine")
        export DE=wine
        break;;
      "Openbox")
        export DE=openbox
        break;;
      "Xfce4")
        export DE=xfce4
        break;;
      "Exit")
        echo ""
        exit 0
        break;;
      *) echo "Invalid option.";;
    esac
  done
  echo ""
fi

if [ -z "$cmd" ]; then
  PS3='  What should we launch on startup? (1-7) '
  menuvar=("Nothing" "Wine Explorer" "Explorer++" "7-Zip" "VLC Media Player" "winecfg" "cmd" "Exit")
  select menuvar in "${menuvar[@]}"
  do
    case $menuvar in
      "Nothing")
        break;;
      "Wine Explorer")
        export wrapper="wine"
        export cmd="explorer"
        break;;
      "Explorer++")
        export wrapper="wine"
        export cmd="C:\\bin\\Explorer++.exe"
        break;;
      "7-Zip")
        export wrapper="wine"
        export cmd="C:\\Program Files\\7-Zip\\7zFM.exe"
        break;;
      "VLC Media Player")
        export wrapper="wine"
        export cmd="C:\\Program Files\\VideoLAN\\VLC\\vlc.exe"
        export args="-I qt"
        break;;
      "winecfg")
        export wrapper="wine"
        export cmd="winecfg"
        break;;
      "cmd")
        export wrapper="wine"
        export cmd="cmd"
        break;;
      "Exit")
        echo ""
        exit 0
        break;;
      *) echo "Invalid option.";;
    esac
  done
fi

startx
killconfirmed
echo ""
